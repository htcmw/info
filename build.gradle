plugins {
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

bootJar.enabled = false

subprojects {
    group = 'com.info'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://repo.spring.io/milestone' }
    }

    dependencies {
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor(
                'org.springframework.boot:spring-boot-configuration-processor',
                'org.projectlombok:lombok'
        )
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }


    test {
        useJUnitPlatform()
    }
}


tasks.named('test') {
    useJUnitPlatform()
}


project(':library') {
    bootJar { enabled = false }
    jar { enabled = false }
    dependencies {
    }
}


project(':coin') {
    bootJar { enabled = true }
    dependencies {
        dependencyManagement {
            imports {
                mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.0-RC2"
            }
        }
        implementation(
                project(':library'),
                'org.springframework.boot:spring-boot-starter-websocket',
                'org.springframework.cloud:spring-cloud-starter-openfeign',
                'org.springframework.boot:spring-boot-starter-web',
                'org.springframework.boot:spring-boot-starter-data-jpa',
        )
        runtimeOnly(
                'com.h2database:h2',
                'mysql:mysql-connector-java'
        )
    }
}

project(':sse') {
    bootJar { enabled = true }
    dependencies {
        implementation project(':library')
        implementation(
                'org.springframework.boot:spring-boot-starter-webflux',
                'org.springframework.boot:spring-boot-starter-websocket',
                'org.apache.kafka:kafka-streams',
                'org.springframework.kafka:spring-kafka'
        )
        testImplementation 'org.springframework.kafka:spring-kafka-test'
    }
}
